@model PagedList.IPagedList<Application>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width"/>
	<title>Index</title>
</head>
<body>
<p>
	@Html.ActionLink("Dodaj nowy", "Create", null, new {@class = "btn btn-primary btn-sm"})
</p>


@using (Html.BeginForm("Index", "Applications")) {
	<div class="table-responsive">
		<table class="table table-hover table-bordered">
			<tr>
				<th>
					@Html.DisplayName("Kod")
				</th>
				<th>
					@Html.DisplayName("Nr faktury")
				</th>
				<th>
					@Html.DisplayName("Produkt")
				</th>
				<th>
					@Html.DisplayName("Data otwarcia")
				</th>
				<th>
					@Html.DisplayName("Typ zlecenia")
				</th>
				<th>
					@Html.DisplayName("Klient")
				</th>
				<th>
					@Html.DisplayName("Serwisant")
				</th>
				<th>
					<form class="form-inline">
						@Html.DisplayName("Status")
						@{
							var listItems = EnumHelper.GetSelectList(typeof(EStatue));
							foreach (var item in listItems) {
								var en = (EStatue)Enum.Parse(typeof(EStatue), item.Value, true);
								item.Text = Statue.StatusDictionary[en];
							}
						}
						@Html.DropDownList("status", listItems, "Wszystkie", new { @class = "form-control", onchange = "this.form.submit();" })
					</form>
				</th>
				<th></th>
			</tr>

			@foreach (var item in Model) {
				var rowStyle = "";
				if (item.Statue != null) {
					var eStatue = Statue.StatusDictionary.FirstOrDefault(sd => sd.Value == item.Statue.Name).Key;
					switch (eStatue) {
						case EStatue.NotConfirmed:
							rowStyle = "danger";
							break;
						case EStatue.Pending:
							rowStyle = "warning";
							break;
						case EStatue.InProgrss:
							rowStyle = "info";
							break;
						case EStatue.Sended:
							rowStyle = "success";
							break;
					}
				}

				<tr class="@rowStyle">
					<td>
						@Html.DisplayFor(modelItem => item.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.InvoiceNo)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Product.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Start)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.AppType.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.User.FullName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.User1.FullName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Statue.Name)
					</td>
					<td style="white-space: nowrap;">
						@Html.ActionLink("Szczegóły", "Details", new { id = item.Id }, new { @class = "btn btn-sm btn-primary" })
							@if (HttpContext.Current.User.IsInRole("Administrator") || HttpContext.Current.User.IsInRole("Serwisant")) {
								@Html.ActionLink("Edytuj", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-primary" })
								@Html.ActionLink("Usuń", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-danger" })
							}
					</td>
				</tr>
			}

		</table>
		Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

		@Html.PagedListPager(Model, page => Url.Action("Index",
					new { page, statue = Model.Select(m => m.Statue) }))
	</div>
}
</body>
</html>